import React, { useState, ChangeEvent, FormEvent } from "react";
import MainLayout from "../../../../layouts/MainLayout";
import "./InstructorRegistration.module.scss";
import { applyInstructor, ApplyInstructorRequest } from "../../api";
import {
  getPresignedUrl,
  uploadFileToS3,
} from "../../../../services/file-service";
interface FormData {
  first_name: string;
  last_name: string;
  email: string;
  phone: string;
  expertise: string;
  education: string;
  experience: string;
  bio: string;
  course_title: string;
  course_description: string;
  linkedin: string;
  portfolio: string;
  cv: File | null;
  terms: boolean;
  newsletter: boolean;
}

const InstructorRegistration: React.FC = () => {
  const [formData, setFormData] = useState<FormData>({
    first_name: "",
    last_name: "",
    email: "",
    phone: "",
    expertise: "",
    education: "",
    experience: "",
    bio: "",
    course_title: "",
    course_description: "",
    linkedin: "",
    portfolio: "",
    cv: null,
    terms: false,
    newsletter: false,
  });

  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState(false);
  const [cvPreview, setCvPreview] = useState<string | null>(null);

  const handleChange = (
    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>
  ) => {
    const target = e.target;
    const { name, value, type } = target;

    if (type === "checkbox" && target instanceof HTMLInputElement) {
      setFormData((prev) => ({ ...prev, [name]: target.checked }));
    } else if (type !== "file") {
      setFormData((prev) => ({ ...prev, [name]: value }));
    }
  };

  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0] || null;
    setFormData((prev) => ({ ...prev, cv: file }));

    if (file) {
      setCvPreview(URL.createObjectURL(file)); // ch·ªâ t·∫°o URL preview
    } else {
      setCvPreview(null);
    }
  };

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    setSuccess(false);

    try {
      let cv_url = "";
      if (formData.cv) {
        const ext = "." + formData.cv.name.split(".").pop()?.toLowerCase();
        const { url, key } = await getPresignedUrl(ext);
        await uploadFileToS3(url, formData.cv);
        cv_url = `https://e-learning-data.s3.us-east-1.amazonaws.com/${encodeURIComponent(
          key
        )}`;
      }

      const payload: ApplyInstructorRequest = {
        cv_url,
        portfolioLink: formData.portfolio,
        motivation: formData.bio,
        extra_info: {
          first_name: formData.first_name,
          last_name: formData.last_name,
          email: formData.email,
          phone: formData.phone,
          expertise: formData.expertise,
          education: formData.education,
          experience: formData.experience,
          course_title: formData.course_title,
          course_description: formData.course_description,
          linkedin: formData.linkedin,
          newsletter: formData.newsletter,
        },
      };

      await applyInstructor(payload);

      setSuccess(true);
      setFormData({
        first_name: "",
        last_name: "",
        email: "",
        phone: "",
        expertise: "",
        education: "",
        experience: "",
        bio: "",
        course_title: "",
        course_description: "",
        linkedin: "",
        portfolio: "",
        cv: null,
        terms: false,
        newsletter: false,
      });
    } catch (err: any) {
      setError(err?.response?.data?.message || "C√≥ l·ªói x·∫£y ra!");
    } finally {
      setLoading(false);
    }
  };

  return (
    <MainLayout>
      <section className="hero">
        <div className="container">
          <h1>Tr·ªü th√†nh Gi·∫£ng Vi√™n c·ªßa Coursevo</h1>
          <p>Chia s·∫ª ki·∫øn th·ª©c v√† x√¢y d·ª±ng s·ª± nghi·ªáp gi·∫£ng d·∫°y tr·ª±c tuy·∫øn</p>
        </div>
      </section>

      <main className="main-content">
        <div className="registration-wrapper">
          <aside className="benefits">
            <h2>L·ª£i √≠ch khi tham gia</h2>{" "}
            <div className="benefit-item">
              {" "}
              <div className="benefit-icon">üí∞</div>{" "}
              <div className="benefit-content">
                {" "}
                <h3>Thu nh·∫≠p h·∫•p d·∫´n</h3>{" "}
                <p>
                  {" "}
                  Nh·∫≠n ƒë·∫øn 70% doanh thu t·ª´ kh√≥a h·ªçc c·ªßa b·∫°n v·ªõi m√¥ h√¨nh chia s·∫ª
                  minh b·∫°ch{" "}
                </p>{" "}
              </div>{" "}
            </div>{" "}
            <div className="benefit-item">
              {" "}
              <div className="benefit-icon">üåç</div>{" "}
              <div className="benefit-content">
                {" "}
                <h3>Ti·∫øp c·∫≠n to√†n c·∫ßu</h3>{" "}
                <p>
                  {" "}
                  K·∫øt n·ªëi v·ªõi h√†ng tri·ªáu h·ªçc vi√™n tr√™n kh·∫Øp th·∫ø gi·ªõi ƒëang khao
                  kh√°t h·ªçc h·ªèi{" "}
                </p>{" "}
              </div>{" "}
            </div>{" "}
            <div className="benefit-item">
              {" "}
              <div className="benefit-icon">üõ†Ô∏è</div>{" "}
              <div className="benefit-content">
                {" "}
                <h3>C√¥ng c·ª• chuy√™n nghi·ªáp</h3>{" "}
                <p>
                  {" "}
                  S·ª≠ d·ª•ng n·ªÅn t·∫£ng hi·ªán ƒë·∫°i v·ªõi ƒë·∫ßy ƒë·ªß c√¥ng c·ª• t·∫°o v√† qu·∫£n l√Ω
                  kh√≥a h·ªçc{" "}
                </p>{" "}
              </div>{" "}
            </div>{" "}
            <div className="benefit-item">
              {" "}
              <div className="benefit-icon">üìä</div>{" "}
              <div className="benefit-content">
                {" "}
                <h3>H·ªó tr·ª£ marketing</h3>{" "}
                <p>
                  {" "}
                  ƒê∆∞·ª£c h·ªó tr·ª£ qu·∫£ng b√° kh√≥a h·ªçc qua c√°c k√™nh marketing c·ªßa ch√∫ng
                  t√¥i{" "}
                </p>{" "}
              </div>{" "}
            </div>{" "}
            <div className="benefit-item">
              {" "}
              <div className="benefit-icon">üéì</div>{" "}
              <div className="benefit-content">
                {" "}
                <h3>ƒê√†o t·∫°o mi·ªÖn ph√≠</h3>{" "}
                <p>
                  {" "}
                  Tham gia c√°c kh√≥a ƒë√†o t·∫°o v·ªÅ k·ªπ nƒÉng gi·∫£ng d·∫°y tr·ª±c tuy·∫øn ho√†n
                  to√†n mi·ªÖn ph√≠{" "}
                </p>{" "}
              </div>{" "}
            </div>{" "}
          </aside>

          <div className="form-container">
            <div className="form-header">
              <h2>ƒêƒÉng k√Ω l√†m gi·∫£ng vi√™n</h2>
              <p>
                ƒêi·ªÅn th√¥ng tin b√™n d∆∞·ªõi ƒë·ªÉ b·∫Øt ƒë·∫ßu h√†nh tr√¨nh gi·∫£ng d·∫°y c·ªßa b·∫°n
              </p>
            </div>

            {success && (
              <div className="alert alert-success">G·ª≠i ƒë∆°n th√†nh c√¥ng!</div>
            )}
            {error && <div className="alert alert-danger">{error}</div>}

            <form id="instructorForm" onSubmit={handleSubmit}>
              {/* Personal Info */}
              <div className="form-row">
                <div className="form-group">
                  <label htmlFor="firstName">
                    H·ªç <span className="required">*</span>
                  </label>
                  <input
                    type="text"
                    id="firstName"
                    name="first_name"
                    placeholder="Nguy·ªÖn"
                    value={formData.first_name}
                    onChange={handleChange}
                    required
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="lastName">
                    T√™n <span className="required">*</span>
                  </label>
                  <input
                    type="text"
                    id="lastName"
                    name="last_name"
                    placeholder="VƒÉn A"
                    value={formData.last_name}
                    onChange={handleChange}
                    required
                  />
                </div>
              </div>

              {/* Email & Phone */}
              <div className="form-row">
                <div className="form-group">
                  <label htmlFor="email">
                    Email <span className="required">*</span>
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    placeholder="email@example.com"
                    value={formData.email}
                    onChange={handleChange}
                    required
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="phone">
                    S·ªë ƒëi·ªán tho·∫°i <span className="required">*</span>
                  </label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    placeholder="0912345678"
                    value={formData.phone}
                    onChange={handleChange}
                    required
                  />
                </div>
              </div>

              {/* Expertise */}
              <div className="form-group">
                <label htmlFor="expertise">
                  Lƒ©nh v·ª±c chuy√™n m√¥n <span className="required">*</span>
                </label>
                <select
                  id="expertise"
                  name="expertise"
                  value={formData.expertise}
                  onChange={handleChange}
                  required
                >
                  <option value="">Ch·ªçn lƒ©nh v·ª±c</option>
                  <option value="programming">L·∫≠p tr√¨nh & C√¥ng ngh·ªá</option>
                  <option value="business">Kinh doanh & Qu·∫£n l√Ω</option>
                  <option value="design">Thi·∫øt k·∫ø & S√°ng t·∫°o</option>
                  <option value="marketing">Marketing & Truy·ªÅn th√¥ng</option>
                  <option value="language">Ngo·∫°i ng·ªØ</option>
                  <option value="personal">Ph√°t tri·ªÉn b·∫£n th√¢n</option>
                  <option value="other">Kh√°c</option>
                </select>
              </div>

              {/* Education */}
              <div className="form-group">
                <label htmlFor="education">
                  Tr√¨nh ƒë·ªô h·ªçc v·∫•n <span className="required">*</span>
                </label>
                <select
                  id="education"
                  name="education"
                  value={formData.education}
                  onChange={handleChange}
                  required
                >
                  <option value="">Ch·ªçn tr√¨nh ƒë·ªô</option>
                  <option value="bachelor">C·ª≠ nh√¢n</option>
                  <option value="master">Th·∫°c sƒ©</option>
                  <option value="phd">Ti·∫øn sƒ©</option>
                  <option value="professional">Ch·ª©ng ch·ªâ chuy√™n m√¥n</option>
                  <option value="other">Kh√°c</option>
                </select>
              </div>

              {/* Experience */}
              <div className="form-group">
                <label htmlFor="experience">
                  S·ªë nƒÉm kinh nghi·ªám <span className="required">*</span>
                </label>
                <select
                  id="experience"
                  name="experience"
                  value={formData.experience}
                  onChange={handleChange}
                  required
                >
                  <option value="">Ch·ªçn s·ªë nƒÉm</option>
                  <option value="0-2">0-2 nƒÉm</option>
                  <option value="3-5">3-5 nƒÉm</option>
                  <option value="6-10">6-10 nƒÉm</option>
                  <option value="10+">Tr√™n 10 nƒÉm</option>
                </select>
              </div>

              {/* Motivation */}
              <div className="form-group">
                <label htmlFor="bio">
                  Gi·ªõi thi·ªáu b·∫£n th√¢n <span className="required">*</span>
                </label>
                <textarea
                  id="bio"
                  name="bio"
                  placeholder="Chia s·∫ª kinh nghi·ªám, th√†nh t·ª±u..."
                  value={formData.bio}
                  onChange={handleChange}
                  required
                ></textarea>
              </div>

              {/* Course info */}
              <div className="form-group">
                <label htmlFor="courseTitle">T√™n kh√≥a h·ªçc d·ª± ki·∫øn</label>
                <input
                  type="text"
                  id="course_title"
                  name="course_title"
                  value={formData.course_title}
                  onChange={handleChange}
                  placeholder="VD: L·∫≠p tr√¨nh Python t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao"
                />
              </div>

              <div className="form-group">
                <label htmlFor="courseDescription">M√¥ t·∫£ kh√≥a h·ªçc</label>
                <textarea
                  id="course_description"
                  name="course_description"
                  value={formData.course_description}
                  onChange={handleChange}
                  placeholder="M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ n·ªôi dung v√† m·ª•c ti√™u..."
                ></textarea>
              </div>

              {/* Extra info */}
              <div className="form-group">
                <label htmlFor="linkedin">LinkedIn Profile</label>
                <input
                  type="url"
                  id="linkedin"
                  name="linkedin"
                  value={formData.linkedin}
                  onChange={handleChange}
                  placeholder="https://linkedin.com/in/yourprofile"
                />
              </div>

              <div className="form-group">
                <label htmlFor="portfolio">Website/Portfolio</label>
                <input
                  type="url"
                  id="portfolio"
                  name="portfolio"
                  value={formData.portfolio}
                  onChange={handleChange}
                  placeholder="https://yourwebsite.com"
                />
              </div>

              <div className="form-group">
                <label htmlFor="cv">T·∫£i l√™n CV/Resume</label>
                <div className="file-input-wrapper">
                  <label htmlFor="cv" className="file-input-label">
                    üìé Ch·ªçn file (PDF, DOC, DOCX)
                  </label>
                  <input
                    type="file"
                    id="cv"
                    name="cv"
                    accept=".pdf,.doc,.docx"
                    onChange={handleFileChange}
                  />
                </div>
                {cvPreview && (
                  <div className="cv-preview">
                    <p className="text-blue-500">{formData.cv?.name}</p>
                  </div>
                )}
              </div>

              {/* Checkboxes */}
              <div className="form-group">
                <div className="checkbox-group">
                  <input
                    type="checkbox"
                    id="terms"
                    name="terms"
                    checked={formData.terms}
                    onChange={handleChange}
                    required
                  />
                  <label htmlFor="terms" className="checkbox-label">
                    T√¥i ƒë·ªìng √Ω v·ªõi <a href="#terms">ƒêi·ªÅu kho·∫£n</a> v√†{" "}
                    <a href="#privacy">Ch√≠nh s√°ch b·∫£o m·∫≠t</a>{" "}
                    <span className="required">*</span>
                  </label>
                </div>
              </div>

              <div className="form-group">
                <div className="checkbox-group">
                  <input
                    type="checkbox"
                    id="newsletter"
                    name="newsletter"
                    checked={formData.newsletter}
                    onChange={handleChange}
                  />
                  <label htmlFor="newsletter" className="checkbox-label">
                    Nh·∫≠n th√¥ng tin v·ªÅ c√°c ch∆∞∆°ng tr√¨nh h·ªó tr·ª£ gi·∫£ng vi√™n
                  </label>
                </div>
              </div>

              <button
                type="submit"
                className="btn btn-primary"
                disabled={loading}
              >
                {loading ? "ƒêang g·ª≠i..." : "G·ª≠i ƒë∆°n ƒëƒÉng k√Ω"}
              </button>
            </form>
          </div>
        </div>
      </main>
    </MainLayout>
  );
};

export default InstructorRegistration;
